// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package pb;

// The greeting service definition.
service Dwork {
  // Sends a greeting
  rpc GiveWork(WorkerID) returns (WorkUnit) {}
  rpc ReceiveResults(Results) returns (Success) {}
  rpc SubmitJob(Job) returns (Success) {}
  rpc GetAllJobs(JobParams) returns (JobStatuses) {}
}

// The request message containing the user's name.
message Results {
  string JobID = 1;
  int64 WorkID = 2;
  bool Found = 3;
  int64 Location = 4;
}

// The response message containing the greetings
// https://developers.google.com/protocol-buffers/docs/proto3
message WorkUnit {
  string JobID = 1;
  int64 ID = 2;
  int64 Offset = 3;
  int64 Size = 4;
  int64 Status = 5; // TODO this should use enums
  string Code = 6;
}

message Success {
  bool Success = 1;
}

message WorkerID {
  string UUID = 1;
}

message Job {
  string Name = 1;
  string Code = 2;
}

message JobParams {}

message JobStatuses {
  message JobStatus {
    string Name = 1;
    int64 DeliveredShards = 2;
    int64 CompletedShards = 3;
    int64 TotalShards = 4;
	bool Found = 5;
    string Location = 6;
  }
  repeated JobStatus Statuses = 1;
}
